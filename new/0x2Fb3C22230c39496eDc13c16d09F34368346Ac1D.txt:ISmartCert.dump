{"sequence":"Functoin_begin-ISmartCert ID-owner Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender ","position":"67,68,"}
{"sequence":"ID-owner Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender Function_end-ISmartCert ","position":"68,67,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender Function_end-ISmartCert Functoin_begin-userRight ","position":"68,67,72,"}
{"sequence":"ID-msg ID-sender Function_end-ISmartCert Functoin_begin-userRight ParaType-address ","position":"68,67,72,"}
{"sequence":"ID-sender Function_end-ISmartCert Functoin_begin-userRight ParaType-address ParaVar-userAddr ","position":"68,67,72,"}
{"sequence":"Function_end-ISmartCert Functoin_begin-userRight ParaType-address ParaVar-userAddr ParaType-bytes1 ","position":"67,72,"}
{"sequence":"Functoin_begin-userRight ParaType-address ParaVar-userAddr ParaType-bytes1 ParaVar-accessRight ","position":"72,"}
{"sequence":"ParaType-address ParaVar-userAddr ParaType-bytes1 ParaVar-accessRight ParaType-uint ","position":"72,"}
{"sequence":"ParaVar-userAddr ParaType-bytes1 ParaVar-accessRight ParaType-uint ParaVar-date ","position":"72,"}
{"sequence":"ParaType-bytes1 ParaVar-accessRight ParaType-uint ParaVar-date If-begin ","position":"72,73,"}
{"sequence":"ParaVar-accessRight ParaType-uint ParaVar-date If-begin Iftest-begin ","position":"72,73,"}
{"sequence":"ParaType-uint ParaVar-date If-begin Iftest-begin ID-owner ","position":"72,73,"}
{"sequence":"ParaVar-date If-begin Iftest-begin ID-owner Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"72,73,"}
{"sequence":"If-begin Iftest-begin ID-owner Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-msg ","position":"73,"}
{"sequence":"Iftest-begin ID-owner Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender ","position":"73,"}
{"sequence":"ID-owner Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender Iftest-end ","position":"73,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-msg ID-sender Iftest-end PREDICATE-!= ","position":"73,74,"}
{"sequence":"ID-msg ID-sender Iftest-end PREDICATE-!= NORMAL ","position":"73,74,"}
{"sequence":"ID-sender Iftest-end PREDICATE-!= NORMAL ID-LogUserRight ","position":"73,74,"}
{"sequence":"Iftest-end PREDICATE-!= NORMAL ID-LogUserRight ID-STATUS_FAIL ","position":"73,74,"}
{"sequence":"PREDICATE-!= NORMAL ID-LogUserRight ID-STATUS_FAIL ID-CODE_ACCESS_DENIED ","position":"74,"}
{"sequence":"NORMAL ID-LogUserRight ID-STATUS_FAIL ID-CODE_ACCESS_DENIED If-end ","position":"74,73,"}
{"sequence":"ID-LogUserRight ID-STATUS_FAIL ID-CODE_ACCESS_DENIED If-end If-begin ","position":"74,73,77,"}
{"sequence":"ID-STATUS_FAIL ID-CODE_ACCESS_DENIED If-end If-begin Iftest-begin ","position":"74,73,77,"}
{"sequence":"ID-CODE_ACCESS_DENIED If-end If-begin Iftest-begin ID-accessRight ","position":"74,73,77,"}
{"sequence":"If-end If-begin Iftest-begin ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"73,77,"}
{"sequence":"If-begin Iftest-begin ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER ","position":"77,"}
{"sequence":"Iftest-begin ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER Binary_expr-&&(null,null) ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER Binary_expr-&&(null,null) ID-accessRight ","position":"77,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"77,"}
{"sequence":"ID-ACCESS_ISSUER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_POSTER ","position":"77,"}
{"sequence":"Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_POSTER Binary_expr-&&(null,null) ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_POSTER Binary_expr-&&(null,null) ID-accessRight ","position":"77,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_POSTER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"77,"}
{"sequence":"ID-ACCESS_POSTER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_VERIFIER ","position":"77,"}
{"sequence":"Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_VERIFIER Binary_expr-&&(null,null) ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_VERIFIER Binary_expr-&&(null,null) ID-accessRight ","position":"77,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_VERIFIER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"77,"}
{"sequence":"ID-ACCESS_VERIFIER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ALL ","position":"77,"}
{"sequence":"Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ALL Binary_expr-&&(null,null) ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ALL Binary_expr-&&(null,null) ID-accessRight ","position":"77,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ALL Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"77,"}
{"sequence":"ID-ACCESS_ALL Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER_POSTER ","position":"77,"}
{"sequence":"Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER_POSTER Binary_expr-&&(null,null) ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER_POSTER Binary_expr-&&(null,null) ID-accessRight ","position":"77,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_ISSUER_POSTER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"77,"}
{"sequence":"ID-ACCESS_ISSUER_POSTER Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_NONE ","position":"77,"}
{"sequence":"Binary_expr-&&(null,null) ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_NONE Iftest-end ","position":"77,"}
{"sequence":"ID-accessRight Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_NONE Iftest-end NORMAL ","position":"77,78,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-ACCESS_NONE Iftest-end NORMAL ID-LogUserRight ","position":"77,78,"}
{"sequence":"ID-ACCESS_NONE Iftest-end NORMAL ID-LogUserRight ID-STATUS_FAIL ","position":"77,78,"}
{"sequence":"Iftest-end NORMAL ID-LogUserRight ID-STATUS_FAIL ID-MSG_INVALID_ACCESS_RIGHT ","position":"77,78,"}
{"sequence":"NORMAL ID-LogUserRight ID-STATUS_FAIL ID-MSG_INVALID_ACCESS_RIGHT If-end ","position":"78,77,"}
{"sequence":"ID-LogUserRight ID-STATUS_FAIL ID-MSG_INVALID_ACCESS_RIGHT If-end ID-accessList ","position":"78,77,81,"}
{"sequence":"ID-STATUS_FAIL ID-MSG_INVALID_ACCESS_RIGHT If-end ID-accessList ID-userAddr ","position":"78,77,81,"}
{"sequence":"ID-MSG_INVALID_ACCESS_RIGHT If-end ID-accessList ID-userAddr ID-accessRight ","position":"78,77,81,"}
{"sequence":"If-end ID-accessList ID-userAddr ID-accessRight Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"77,81,"}
{"sequence":"ID-accessList ID-userAddr ID-accessRight Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-accessRight ","position":"81,"}
{"sequence":"ID-userAddr ID-accessRight Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-accessRight ID-accessList ","position":"81,82,"}
{"sequence":"ID-accessRight Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-accessRight ID-accessList ID-userAddr ","position":"81,82,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-accessRight ID-accessList ID-userAddr ID-date ","position":"81,82,"}
{"sequence":"ID-accessRight ID-accessList ID-userAddr ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"81,82,"}
{"sequence":"ID-accessList ID-userAddr ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-date ","position":"82,"}
{"sequence":"ID-userAddr ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-date ID-accessList ","position":"82,83,"}
{"sequence":"ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-date ID-accessList ID-userAddr ","position":"82,83,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-date ID-accessList ID-userAddr ID-isValue ","position":"82,83,"}
{"sequence":"ID-date ID-accessList ID-userAddr ID-isValue Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"82,83,"}
{"sequence":"ID-accessList ID-userAddr ID-isValue Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"83,"}
{"sequence":"ID-userAddr ID-isValue Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE NORMAL ","position":"83,84,"}
{"sequence":"ID-isValue Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE NORMAL ID-LogUserRight ","position":"83,84,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE NORMAL ID-LogUserRight ID-STATUS_PASS ","position":"83,84,"}
{"sequence":"Literal-TYPE NORMAL ID-LogUserRight ID-STATUS_PASS Literal-TYPE ","position":"83,84,"}
{"sequence":"NORMAL ID-LogUserRight ID-STATUS_PASS Literal-TYPE Function_end-userRight ","position":"84,72,"}
{"sequence":"ID-LogUserRight ID-STATUS_PASS Literal-TYPE Function_end-userRight Functoin_begin-checkAccess ","position":"84,72,87,"}
{"sequence":"ID-STATUS_PASS Literal-TYPE Function_end-userRight Functoin_begin-checkAccess ParaType-address ","position":"84,72,87,"}
{"sequence":"Literal-TYPE Function_end-userRight Functoin_begin-checkAccess ParaType-address ParaVar-user ","position":"84,72,87,"}
{"sequence":"Function_end-userRight Functoin_begin-checkAccess ParaType-address ParaVar-user ParaType-bytes1 ","position":"72,87,"}
{"sequence":"Functoin_begin-checkAccess ParaType-address ParaVar-user ParaType-bytes1 ParaVar-access ","position":"87,"}
{"sequence":"ParaType-address ParaVar-user ParaType-bytes1 ParaVar-access If-begin ","position":"87,88,"}
{"sequence":"ParaVar-user ParaType-bytes1 ParaVar-access If-begin Iftest-begin ","position":"87,88,"}
{"sequence":"ParaType-bytes1 ParaVar-access If-begin Iftest-begin ID-accessList ","position":"87,88,"}
{"sequence":"ParaVar-access If-begin Iftest-begin ID-accessList ID-user ","position":"87,88,"}
{"sequence":"If-begin Iftest-begin ID-accessList ID-user ID-isValue ","position":"88,"}
{"sequence":"Iftest-begin ID-accessList ID-user ID-isValue Iftest-end ","position":"88,"}
{"sequence":"ID-accessList ID-user ID-isValue Iftest-end If-begin ","position":"88,89,"}
{"sequence":"ID-user ID-isValue Iftest-end If-begin Iftest-begin ","position":"88,89,"}
{"sequence":"ID-isValue Iftest-end If-begin Iftest-begin ID-accessList ","position":"88,89,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-accessList ID-user ","position":"88,89,"}
{"sequence":"If-begin Iftest-begin ID-accessList ID-user ID-accessRight ","position":"89,"}
{"sequence":"Iftest-begin ID-accessList ID-user ID-accessRight Binary_expr-&(MEMORY_READ_LOCAL,null) ","position":"89,"}
{"sequence":"ID-accessList ID-user ID-accessRight Binary_expr-&(MEMORY_READ_LOCAL,null) ID-access ","position":"89,"}
{"sequence":"ID-user ID-accessRight Binary_expr-&(MEMORY_READ_LOCAL,null) ID-access Binary_expr-==(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"89,"}
{"sequence":"ID-accessRight Binary_expr-&(MEMORY_READ_LOCAL,null) ID-access Binary_expr-==(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-access ","position":"89,"}
{"sequence":"Binary_expr-&(MEMORY_READ_LOCAL,null) ID-access Binary_expr-==(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-access Iftest-end ","position":"89,"}
{"sequence":"ID-access Binary_expr-==(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-access Iftest-end Literal-TYPE ","position":"89,90,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-access Iftest-end Literal-TYPE If-end ","position":"89,90,"}
{"sequence":"ID-access Iftest-end Literal-TYPE If-end If-end ","position":"89,90,88,"}
{"sequence":"Iftest-end Literal-TYPE If-end If-end Literal-TYPE ","position":"89,90,88,93,"}
{"sequence":"Literal-TYPE If-end If-end Literal-TYPE Function_end-checkAccess ","position":"90,89,88,93,87,"}
{"sequence":"If-end If-end Literal-TYPE Function_end-checkAccess Functoin_begin-internalRegisterCert ","position":"89,88,93,87,96,"}
{"sequence":"If-end Literal-TYPE Function_end-checkAccess Functoin_begin-internalRegisterCert ParaType-bytes32 ","position":"88,93,87,96,"}
{"sequence":"Literal-TYPE Function_end-checkAccess Functoin_begin-internalRegisterCert ParaType-bytes32 ParaVar-certHash ","position":"93,87,96,"}
{"sequence":"Function_end-checkAccess Functoin_begin-internalRegisterCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"87,96,"}
{"sequence":"Functoin_begin-internalRegisterCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ","position":"96,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-uint ","position":"96,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-uint ParaVar-registrationDate ","position":"96,"}
{"sequence":"ParaType-bytes ParaVar-sig ParaType-uint ParaVar-registrationDate If-begin ","position":"96,99,"}
{"sequence":"ParaVar-sig ParaType-uint ParaVar-registrationDate If-begin Iftest-begin ","position":"96,99,"}
{"sequence":"ParaType-uint ParaVar-registrationDate If-begin Iftest-begin PREDICATE-! ","position":"96,99,"}
{"sequence":"ParaVar-registrationDate If-begin Iftest-begin PREDICATE-! NORMAL ","position":"96,99,"}
{"sequence":"If-begin Iftest-begin PREDICATE-! NORMAL ID-checkAccess ","position":"99,"}
{"sequence":"Iftest-begin PREDICATE-! NORMAL ID-checkAccess ID-msg ","position":"99,"}
{"sequence":"PREDICATE-! NORMAL ID-checkAccess ID-msg ID-sender ","position":"99,"}
{"sequence":"NORMAL ID-checkAccess ID-msg ID-sender ID-ACCESS_POSTER ","position":"99,"}
{"sequence":"ID-checkAccess ID-msg ID-sender ID-ACCESS_POSTER Iftest-end ","position":"99,"}
{"sequence":"ID-msg ID-sender ID-ACCESS_POSTER Iftest-end If-end ","position":"99,"}
{"sequence":"ID-sender ID-ACCESS_POSTER Iftest-end If-end ID-issuer ","position":"99,103,"}
{"sequence":"ID-ACCESS_POSTER Iftest-end If-end ID-issuer Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"99,103,"}
{"sequence":"Iftest-end If-end ID-issuer Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ","position":"99,103,"}
{"sequence":"If-end ID-issuer Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ","position":"99,103,"}
{"sequence":"ID-issuer Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-certHash ","position":"103,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-certHash ID-sig ","position":"103,"}
{"sequence":"NORMAL ID-recoverAddr ID-certHash ID-sig If-begin ","position":"103,104,"}
{"sequence":"ID-recoverAddr ID-certHash ID-sig If-begin Iftest-begin ","position":"103,104,"}
{"sequence":"ID-certHash ID-sig If-begin Iftest-begin PREDICATE-! ","position":"103,104,"}
{"sequence":"ID-sig If-begin Iftest-begin PREDICATE-! NORMAL ","position":"103,104,"}
{"sequence":"If-begin Iftest-begin PREDICATE-! NORMAL ID-checkAccess ","position":"104,"}
{"sequence":"Iftest-begin PREDICATE-! NORMAL ID-checkAccess ID-issuer ","position":"104,"}
{"sequence":"PREDICATE-! NORMAL ID-checkAccess ID-issuer ID-ACCESS_ISSUER ","position":"104,"}
{"sequence":"NORMAL ID-checkAccess ID-issuer ID-ACCESS_ISSUER Iftest-end ","position":"104,"}
{"sequence":"ID-checkAccess ID-issuer ID-ACCESS_ISSUER Iftest-end If-end ","position":"104,"}
{"sequence":"ID-issuer ID-ACCESS_ISSUER Iftest-end If-end If-begin ","position":"104,108,"}
{"sequence":"ID-ACCESS_ISSUER Iftest-end If-end If-begin Iftest-begin ","position":"104,108,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-hashes ","position":"104,108,"}
{"sequence":"If-end If-begin Iftest-begin ID-hashes ID-certHash ","position":"104,108,"}
{"sequence":"If-begin Iftest-begin ID-hashes ID-certHash ID-exists ","position":"108,"}
{"sequence":"Iftest-begin ID-hashes ID-certHash ID-exists Iftest-end ","position":"108,"}
{"sequence":"ID-hashes ID-certHash ID-exists Iftest-end If-begin ","position":"108,110,"}
{"sequence":"ID-certHash ID-exists Iftest-end If-begin Iftest-begin ","position":"108,110,"}
{"sequence":"ID-exists Iftest-end If-begin Iftest-begin ID-revoked ","position":"108,110,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-revoked ID-certHash ","position":"108,110,"}
{"sequence":"If-begin Iftest-begin ID-revoked ID-certHash ID-exists ","position":"110,"}
{"sequence":"Iftest-begin ID-revoked ID-certHash ID-exists Iftest-end ","position":"110,"}
{"sequence":"ID-revoked ID-certHash ID-exists Iftest-end If-end ","position":"110,"}
{"sequence":"ID-certHash ID-exists Iftest-end If-end If-end ","position":"110,108,"}
{"sequence":"ID-exists Iftest-end If-end If-end ID-hashes ","position":"110,108,118,"}
{"sequence":"Iftest-end If-end If-end ID-hashes ID-certHash ","position":"110,108,118,"}
{"sequence":"If-end If-end ID-hashes ID-certHash ID-sig ","position":"110,108,118,"}
{"sequence":"If-end ID-hashes ID-certHash ID-sig Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"108,118,"}
{"sequence":"ID-hashes ID-certHash ID-sig Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-sig ","position":"118,"}
{"sequence":"ID-certHash ID-sig Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-sig ID-hashes ","position":"118,120,"}
{"sequence":"ID-sig Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-sig ID-hashes ID-certHash ","position":"118,120,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-sig ID-hashes ID-certHash ID-registerDate ","position":"118,120,"}
{"sequence":"ID-sig ID-hashes ID-certHash ID-registerDate Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"118,120,"}
{"sequence":"ID-hashes ID-certHash ID-registerDate Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-registrationDate ","position":"120,"}
{"sequence":"ID-certHash ID-registerDate Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-registrationDate ID-hashes ","position":"120,122,"}
{"sequence":"ID-registerDate Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-registrationDate ID-hashes ID-certHash ","position":"120,122,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-registrationDate ID-hashes ID-certHash ID-exists ","position":"120,122,"}
{"sequence":"ID-registrationDate ID-hashes ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"120,122,"}
{"sequence":"ID-hashes ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"122,"}
{"sequence":"ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE Function_end-internalRegisterCert ","position":"122,96,"}
{"sequence":"ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE Function_end-internalRegisterCert Functoin_begin-internalRegisterCertWithID ","position":"122,96,126,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE Function_end-internalRegisterCert Functoin_begin-internalRegisterCertWithID ParaType-bytes32 ","position":"122,96,126,"}
{"sequence":"Literal-TYPE Function_end-internalRegisterCert Functoin_begin-internalRegisterCertWithID ParaType-bytes32 ParaVar-certHash ","position":"122,96,126,"}
{"sequence":"Function_end-internalRegisterCert Functoin_begin-internalRegisterCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"96,126,"}
{"sequence":"Functoin_begin-internalRegisterCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ","position":"126,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-bytes32 ","position":"126,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ","position":"126,"}
{"sequence":"ParaType-bytes ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ParaType-uint ","position":"126,"}
{"sequence":"ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ","position":"126,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ","position":"126,"}
{"sequence":"ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id ","position":"126,"}
{"sequence":"ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id If-begin ","position":"126,138,"}
{"sequence":"ParaVar-registrationDate ParaType-bytes32 ParaVar-id If-begin Iftest-begin ","position":"126,138,"}
{"sequence":"ParaType-bytes32 ParaVar-id If-begin Iftest-begin ID-merkleHash ","position":"126,138,"}
{"sequence":"ParaVar-id If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"126,138,"}
{"sequence":"If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"138,"}
{"sequence":"Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"138,"}
{"sequence":"ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin ","position":"138,139,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin Iftest-begin ","position":"138,139,"}
{"sequence":"Literal-TYPE Iftest-end If-begin Iftest-begin ID-revoked ","position":"138,139,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-revoked ID-merkleHash ","position":"138,139,"}
{"sequence":"If-begin Iftest-begin ID-revoked ID-merkleHash ID-exists ","position":"139,"}
{"sequence":"Iftest-begin ID-revoked ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"139,"}
{"sequence":"ID-revoked ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ","position":"139,"}
{"sequence":"ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ","position":"139,"}
{"sequence":"ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ID-batchFlag ","position":"139,"}
{"sequence":"Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ID-batchFlag Iftest-end ","position":"139,"}
{"sequence":"ID-revoked ID-merkleHash ID-batchFlag Iftest-end If-end ","position":"139,"}
{"sequence":"ID-merkleHash ID-batchFlag Iftest-end If-end If-end ","position":"139,138,"}
{"sequence":"ID-batchFlag Iftest-end If-end If-end If-begin ","position":"139,138,145,"}
{"sequence":"Iftest-end If-end If-end If-begin Iftest-begin ","position":"139,138,145,"}
{"sequence":"If-end If-end If-begin Iftest-begin ID-merkleHash ","position":"139,138,145,"}
{"sequence":"If-end If-begin Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"138,145,"}
{"sequence":"If-begin Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"145,"}
{"sequence":"Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"145,"}
{"sequence":"ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end ","position":"145,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end If-begin ","position":"145,150,"}
{"sequence":"Literal-TYPE Iftest-end If-end If-begin Iftest-begin ","position":"145,150,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-hashes ","position":"145,150,"}
{"sequence":"If-end If-begin Iftest-begin ID-hashes ID-merkleHash ","position":"145,150,"}
{"sequence":"If-begin Iftest-begin ID-hashes ID-merkleHash ID-exists ","position":"150,"}
{"sequence":"Iftest-begin ID-hashes ID-merkleHash ID-exists Iftest-end ","position":"150,"}
{"sequence":"ID-hashes ID-merkleHash ID-exists Iftest-end If-end ","position":"150,"}
{"sequence":"ID-merkleHash ID-exists Iftest-end If-end Assign_expr-=(null,null) ","position":"150,155,"}
{"sequence":"ID-exists Iftest-end If-end Assign_expr-=(null,null) NORMAL ","position":"150,155,"}
{"sequence":"Iftest-end If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ","position":"150,155,"}
{"sequence":"If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-certHash ","position":"150,155,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-certHash ID-sig ","position":"155,"}
{"sequence":"NORMAL ID-internalRegisterCert ID-certHash ID-sig ID-registrationDate ","position":"155,"}
{"sequence":"ID-internalRegisterCert ID-certHash ID-sig ID-registrationDate If-begin ","position":"155,156,"}
{"sequence":"ID-certHash ID-sig ID-registrationDate If-begin Iftest-begin ","position":"155,156,"}
{"sequence":"ID-sig ID-registrationDate If-begin Iftest-begin PREDICATE-!= ","position":"155,156,"}
{"sequence":"ID-registrationDate If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"155,156,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ","position":"156,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ID-status ","position":"156,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) ","position":"156,"}
{"sequence":"NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= ","position":"156,"}
{"sequence":"ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ","position":"156,"}
{"sequence":"ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ","position":"156,"}
{"sequence":"Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS ","position":"156,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end ","position":"156,"}
{"sequence":"NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end If-end ","position":"156,"}
{"sequence":"ID-keccak256 ID-STATUS_PASS Iftest-end If-end NORMAL ","position":"156,161,"}
{"sequence":"ID-STATUS_PASS Iftest-end If-end NORMAL ID-idMap ","position":"156,161,"}
{"sequence":"Iftest-end If-end NORMAL ID-idMap ID-id ","position":"156,161,"}
{"sequence":"If-end NORMAL ID-idMap ID-id ID-push ","position":"156,161,"}
{"sequence":"NORMAL ID-idMap ID-id ID-push NORMAL ","position":"161,"}
{"sequence":"ID-idMap ID-id ID-push NORMAL ID-Lvl2Struct ","position":"161,"}
{"sequence":"ID-id ID-push NORMAL ID-Lvl2Struct Function_end-internalRegisterCertWithID ","position":"161,126,"}
{"sequence":"ID-push NORMAL ID-Lvl2Struct Function_end-internalRegisterCertWithID Functoin_begin-internalRevokeCert ","position":"161,126,166,"}
{"sequence":"NORMAL ID-Lvl2Struct Function_end-internalRegisterCertWithID Functoin_begin-internalRevokeCert ParaType-bytes32 ","position":"161,126,166,"}
{"sequence":"ID-Lvl2Struct Function_end-internalRegisterCertWithID Functoin_begin-internalRevokeCert ParaType-bytes32 ParaVar-certHash ","position":"161,126,166,"}
{"sequence":"Function_end-internalRegisterCertWithID Functoin_begin-internalRevokeCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"126,166,"}
{"sequence":"Functoin_begin-internalRevokeCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ","position":"166,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ","position":"166,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ","position":"166,"}
{"sequence":"ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ParaType-bool ","position":"166,"}
{"sequence":"ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ","position":"166,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ParaType-uint ","position":"166,"}
{"sequence":"ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ParaType-uint ParaVar-revocationDate ","position":"166,"}
{"sequence":"ParaType-bool ParaVar-batchFlag ParaType-uint ParaVar-revocationDate If-begin ","position":"166,170,"}
{"sequence":"ParaVar-batchFlag ParaType-uint ParaVar-revocationDate If-begin Iftest-begin ","position":"166,170,"}
{"sequence":"ParaType-uint ParaVar-revocationDate If-begin Iftest-begin PREDICATE-! ","position":"166,170,"}
{"sequence":"ParaVar-revocationDate If-begin Iftest-begin PREDICATE-! NORMAL ","position":"166,170,"}
{"sequence":"If-begin Iftest-begin PREDICATE-! NORMAL ID-checkAccess ","position":"170,"}
{"sequence":"Iftest-begin PREDICATE-! NORMAL ID-checkAccess ID-msg ","position":"170,"}
{"sequence":"PREDICATE-! NORMAL ID-checkAccess ID-msg ID-sender ","position":"170,"}
{"sequence":"NORMAL ID-checkAccess ID-msg ID-sender ID-ACCESS_POSTER ","position":"170,"}
{"sequence":"ID-checkAccess ID-msg ID-sender ID-ACCESS_POSTER Iftest-end ","position":"170,"}
{"sequence":"ID-msg ID-sender ID-ACCESS_POSTER Iftest-end If-end ","position":"170,"}
{"sequence":"ID-sender ID-ACCESS_POSTER Iftest-end If-end ID-issuer1 ","position":"170,174,"}
{"sequence":"ID-ACCESS_POSTER Iftest-end If-end ID-issuer1 Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"170,174,"}
{"sequence":"Iftest-end If-end ID-issuer1 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ","position":"170,174,"}
{"sequence":"If-end ID-issuer1 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ","position":"170,174,"}
{"sequence":"ID-issuer1 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-certHash ","position":"174,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-certHash ID-sigCertHash ","position":"174,"}
{"sequence":"NORMAL ID-recoverAddr ID-certHash ID-sigCertHash If-begin ","position":"174,175,"}
{"sequence":"ID-recoverAddr ID-certHash ID-sigCertHash If-begin Iftest-begin ","position":"174,175,"}
{"sequence":"ID-certHash ID-sigCertHash If-begin Iftest-begin PREDICATE-! ","position":"174,175,"}
{"sequence":"ID-sigCertHash If-begin Iftest-begin PREDICATE-! NORMAL ","position":"174,175,"}
{"sequence":"If-begin Iftest-begin PREDICATE-! NORMAL ID-checkAccess ","position":"175,"}
{"sequence":"Iftest-begin PREDICATE-! NORMAL ID-checkAccess ID-issuer1 ","position":"175,"}
{"sequence":"PREDICATE-! NORMAL ID-checkAccess ID-issuer1 ID-ACCESS_ISSUER ","position":"175,"}
{"sequence":"NORMAL ID-checkAccess ID-issuer1 ID-ACCESS_ISSUER Iftest-end ","position":"175,"}
{"sequence":"ID-checkAccess ID-issuer1 ID-ACCESS_ISSUER Iftest-end If-end ","position":"175,"}
{"sequence":"ID-issuer1 ID-ACCESS_ISSUER Iftest-end If-end If-begin ","position":"175,179,"}
{"sequence":"ID-ACCESS_ISSUER Iftest-end If-end If-begin Iftest-begin ","position":"175,179,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-batchFlag ","position":"175,179,"}
{"sequence":"If-end If-begin Iftest-begin ID-batchFlag Iftest-end ","position":"175,179,"}
{"sequence":"If-begin Iftest-begin ID-batchFlag Iftest-end If-begin ","position":"179,180,"}
{"sequence":"Iftest-begin ID-batchFlag Iftest-end If-begin Iftest-begin ","position":"179,180,"}
{"sequence":"ID-batchFlag Iftest-end If-begin Iftest-begin ID-certHash ","position":"179,180,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-certHash Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"179,180,"}
{"sequence":"If-begin Iftest-begin ID-certHash Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ","position":"180,"}
{"sequence":"Iftest-begin ID-certHash Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash Iftest-end ","position":"180,"}
{"sequence":"ID-certHash Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash Iftest-end If-end ","position":"180,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash Iftest-end If-end If-begin ","position":"180,183,"}
{"sequence":"ID-merkleHash Iftest-end If-end If-begin Iftest-begin ","position":"180,183,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-merkleHash ","position":"180,183,"}
{"sequence":"If-end If-begin Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"180,183,"}
{"sequence":"If-begin Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"183,"}
{"sequence":"Iftest-begin ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"183,"}
{"sequence":"ID-merkleHash Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end ","position":"183,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end If-end ","position":"183,179,"}
{"sequence":"Literal-TYPE Iftest-end If-end If-end If-begin ","position":"183,179,187,"}
{"sequence":"Iftest-end If-end If-end If-begin Iftest-begin ","position":"183,179,187,"}
{"sequence":"If-end If-end If-begin Iftest-begin ID-merkleHash ","position":"183,179,187,"}
{"sequence":"If-end If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"179,187,"}
{"sequence":"If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"187,"}
{"sequence":"Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"187,"}
{"sequence":"ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin ","position":"187,189,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin Iftest-begin ","position":"187,189,"}
{"sequence":"Literal-TYPE Iftest-end If-begin Iftest-begin ID-hashes ","position":"187,189,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-hashes ID-merkleHash ","position":"187,189,"}
{"sequence":"If-begin Iftest-begin ID-hashes ID-merkleHash ID-exists ","position":"189,"}
{"sequence":"Iftest-begin ID-hashes ID-merkleHash ID-exists Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"189,"}
{"sequence":"ID-hashes ID-merkleHash ID-exists Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"189,"}
{"sequence":"ID-merkleHash ID-exists Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"189,"}
{"sequence":"ID-exists Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end ","position":"189,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-end ID-issuer2 ","position":"189,193,"}
{"sequence":"Literal-TYPE Iftest-end If-end ID-issuer2 Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"189,193,"}
{"sequence":"Iftest-end If-end ID-issuer2 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ","position":"189,193,"}
{"sequence":"If-end ID-issuer2 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ","position":"189,193,"}
{"sequence":"ID-issuer2 Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-merkleHash ","position":"193,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-recoverAddr ID-merkleHash ID-hashes ","position":"193,"}
{"sequence":"NORMAL ID-recoverAddr ID-merkleHash ID-hashes ID-merkleHash ","position":"193,"}
{"sequence":"ID-recoverAddr ID-merkleHash ID-hashes ID-merkleHash ID-sig ","position":"193,"}
{"sequence":"ID-merkleHash ID-hashes ID-merkleHash ID-sig If-begin ","position":"193,194,"}
{"sequence":"ID-hashes ID-merkleHash ID-sig If-begin Iftest-begin ","position":"193,194,"}
{"sequence":"ID-merkleHash ID-sig If-begin Iftest-begin ID-issuer1 ","position":"193,194,"}
{"sequence":"ID-sig If-begin Iftest-begin ID-issuer1 Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"193,194,"}
{"sequence":"If-begin Iftest-begin ID-issuer1 Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-issuer2 ","position":"194,"}
{"sequence":"Iftest-begin ID-issuer1 Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-issuer2 Iftest-end ","position":"194,"}
{"sequence":"ID-issuer1 Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-issuer2 Iftest-end If-end ","position":"194,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-issuer2 Iftest-end If-end If-end ","position":"194,187,"}
{"sequence":"ID-issuer2 Iftest-end If-end If-end If-begin ","position":"194,187,199,"}
{"sequence":"Iftest-end If-end If-end If-begin Iftest-begin ","position":"194,187,199,"}
{"sequence":"If-end If-end If-begin Iftest-begin ID-revoked ","position":"194,187,199,"}
{"sequence":"If-end If-begin Iftest-begin ID-revoked ID-certHash ","position":"187,199,"}
{"sequence":"If-begin Iftest-begin ID-revoked ID-certHash ID-exists ","position":"199,"}
{"sequence":"Iftest-begin ID-revoked ID-certHash ID-exists Iftest-end ","position":"199,"}
{"sequence":"ID-revoked ID-certHash ID-exists Iftest-end If-end ","position":"199,"}
{"sequence":"ID-certHash ID-exists Iftest-end If-end If-begin ","position":"199,203,"}
{"sequence":"ID-exists Iftest-end If-end If-begin Iftest-begin ","position":"199,203,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-batchFlag ","position":"199,203,"}
{"sequence":"If-end If-begin Iftest-begin ID-batchFlag Iftest-end ","position":"199,203,"}
{"sequence":"If-begin Iftest-begin ID-batchFlag Iftest-end ID-revoked ","position":"203,204,"}
{"sequence":"Iftest-begin ID-batchFlag Iftest-end ID-revoked ID-certHash ","position":"203,204,"}
{"sequence":"ID-batchFlag Iftest-end ID-revoked ID-certHash ID-batchFlag ","position":"203,204,"}
{"sequence":"Iftest-end ID-revoked ID-certHash ID-batchFlag PREDICATE-undefined ","position":"203,204,"}
{"sequence":"ID-revoked ID-certHash ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"204,"}
{"sequence":"ID-certHash ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"204,"}
{"sequence":"ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ","position":"204,206,"}
{"sequence":"PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ID-certHash ","position":"204,206,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ID-certHash ID-batchFlag ","position":"204,206,"}
{"sequence":"Literal-TYPE ID-revoked ID-certHash ID-batchFlag PREDICATE-undefined ","position":"204,206,"}
{"sequence":"ID-revoked ID-certHash ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"206,"}
{"sequence":"ID-certHash ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"206,"}
{"sequence":"ID-batchFlag PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end ","position":"206,203,"}
{"sequence":"PREDICATE-undefined Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end ID-revoked ","position":"206,203,208,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end ID-revoked ID-certHash ","position":"206,203,208,"}
{"sequence":"Literal-TYPE If-end ID-revoked ID-certHash ID-exists ","position":"206,203,208,"}
{"sequence":"If-end ID-revoked ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"203,208,"}
{"sequence":"ID-revoked ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"208,"}
{"sequence":"ID-certHash ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ","position":"208,209,"}
{"sequence":"ID-exists Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ID-certHash ","position":"208,209,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-revoked ID-certHash ID-merkleHash ","position":"208,209,"}
{"sequence":"Literal-TYPE ID-revoked ID-certHash ID-merkleHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"208,209,"}
{"sequence":"ID-revoked ID-certHash ID-merkleHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ","position":"209,"}
{"sequence":"ID-certHash ID-merkleHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-revoked ","position":"209,210,"}
{"sequence":"ID-merkleHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-revoked ID-certHash ","position":"209,210,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-revoked ID-certHash ID-date ","position":"209,210,"}
{"sequence":"ID-merkleHash ID-revoked ID-certHash ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"209,210,"}
{"sequence":"ID-revoked ID-certHash ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-revocationDate ","position":"210,"}
{"sequence":"ID-certHash ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-revocationDate Function_end-internalRevokeCert ","position":"210,166,"}
{"sequence":"ID-date Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-revocationDate Function_end-internalRevokeCert Functoin_begin-registerCert ","position":"210,166,217,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-revocationDate Function_end-internalRevokeCert Functoin_begin-registerCert ParaType-bytes32 ","position":"210,166,217,"}
{"sequence":"ID-revocationDate Function_end-internalRevokeCert Functoin_begin-registerCert ParaType-bytes32 ParaVar-certHash ","position":"210,166,217,"}
{"sequence":"Function_end-internalRevokeCert Functoin_begin-registerCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"166,217,"}
{"sequence":"Functoin_begin-registerCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ","position":"217,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-uint ","position":"217,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-uint ParaVar-registrationDate ","position":"217,"}
{"sequence":"ParaType-bytes ParaVar-sig ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) ","position":"217,221,"}
{"sequence":"ParaVar-sig ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ","position":"217,221,"}
{"sequence":"ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ","position":"217,221,"}
{"sequence":"ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-certHash ","position":"217,221,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-certHash ID-sig ","position":"221,"}
{"sequence":"NORMAL ID-internalRegisterCert ID-certHash ID-sig ID-registrationDate ","position":"221,"}
{"sequence":"ID-internalRegisterCert ID-certHash ID-sig ID-registrationDate NORMAL ","position":"221,222,"}
{"sequence":"ID-certHash ID-sig ID-registrationDate NORMAL ID-LogRegisterCert ","position":"221,222,"}
{"sequence":"ID-sig ID-registrationDate NORMAL ID-LogRegisterCert ID-status ","position":"221,222,"}
{"sequence":"ID-registrationDate NORMAL ID-LogRegisterCert ID-status ID-message ","position":"221,222,"}
{"sequence":"NORMAL ID-LogRegisterCert ID-status ID-message Function_end-registerCert ","position":"222,217,"}
{"sequence":"ID-LogRegisterCert ID-status ID-message Function_end-registerCert Functoin_begin-registerCertWithID ","position":"222,217,226,"}
{"sequence":"ID-status ID-message Function_end-registerCert Functoin_begin-registerCertWithID ParaType-bytes32 ","position":"222,217,226,"}
{"sequence":"ID-message Function_end-registerCert Functoin_begin-registerCertWithID ParaType-bytes32 ParaVar-certHash ","position":"222,217,226,"}
{"sequence":"Function_end-registerCert Functoin_begin-registerCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"217,226,"}
{"sequence":"Functoin_begin-registerCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ","position":"226,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-bytes32 ","position":"226,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ","position":"226,"}
{"sequence":"ParaType-bytes ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ParaType-uint ","position":"226,"}
{"sequence":"ParaVar-sig ParaType-bytes32 ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ","position":"226,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ","position":"226,"}
{"sequence":"ParaVar-merkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id ","position":"226,"}
{"sequence":"ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) ","position":"226,231,"}
{"sequence":"ParaVar-registrationDate ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) NORMAL ","position":"226,231,"}
{"sequence":"ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ","position":"226,231,"}
{"sequence":"ParaVar-id Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ID-certHash ","position":"226,231,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ID-certHash ID-sig ","position":"231,"}
{"sequence":"NORMAL ID-internalRegisterCertWithID ID-certHash ID-sig ID-merkleHash ","position":"231,"}
{"sequence":"ID-internalRegisterCertWithID ID-certHash ID-sig ID-merkleHash ID-registrationDate ","position":"231,"}
{"sequence":"ID-certHash ID-sig ID-merkleHash ID-registrationDate ID-id ","position":"231,"}
{"sequence":"ID-sig ID-merkleHash ID-registrationDate ID-id NORMAL ","position":"231,232,"}
{"sequence":"ID-merkleHash ID-registrationDate ID-id NORMAL ID-LogRegisterCertWithID ","position":"231,232,"}
{"sequence":"ID-registrationDate ID-id NORMAL ID-LogRegisterCertWithID ID-status ","position":"231,232,"}
{"sequence":"ID-id NORMAL ID-LogRegisterCertWithID ID-status ID-message ","position":"231,232,"}
{"sequence":"NORMAL ID-LogRegisterCertWithID ID-status ID-message Function_end-registerCertWithID ","position":"232,226,"}
{"sequence":"ID-LogRegisterCertWithID ID-status ID-message Function_end-registerCertWithID Functoin_begin-internalVerifyCert ","position":"232,226,236,"}
{"sequence":"ID-status ID-message Function_end-registerCertWithID Functoin_begin-internalVerifyCert ParaType-bytes32 ","position":"232,226,236,"}
{"sequence":"ID-message Function_end-registerCertWithID Functoin_begin-internalVerifyCert ParaType-bytes32 ParaVar-certHash ","position":"232,226,236,"}
{"sequence":"Function_end-registerCertWithID Functoin_begin-internalVerifyCert ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ","position":"226,236,"}
{"sequence":"Functoin_begin-internalVerifyCert ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ","position":"236,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-address ","position":"236,"}
{"sequence":"ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-address ParaVar-issuer ","position":"236,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-address ParaVar-issuer If-begin ","position":"236,240,"}
{"sequence":"ParaVar-merkleHash ParaType-address ParaVar-issuer If-begin Iftest-begin ","position":"236,240,"}
{"sequence":"ParaType-address ParaVar-issuer If-begin Iftest-begin ID-revoked ","position":"236,240,"}
{"sequence":"ParaVar-issuer If-begin Iftest-begin ID-revoked ID-certHash ","position":"236,240,"}
{"sequence":"If-begin Iftest-begin ID-revoked ID-certHash ID-exists ","position":"240,"}
{"sequence":"Iftest-begin ID-revoked ID-certHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,null) ","position":"240,"}
{"sequence":"ID-revoked ID-certHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,null) ID-revoked ","position":"240,"}
{"sequence":"ID-certHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,null) ID-revoked ID-certHash ","position":"240,"}
{"sequence":"ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,null) ID-revoked ID-certHash ID-batchFlag ","position":"240,"}
{"sequence":"Binary_expr-&&(MEMORY_READ_LOCAL,null) ID-revoked ID-certHash ID-batchFlag Iftest-end ","position":"240,"}
{"sequence":"ID-revoked ID-certHash ID-batchFlag Iftest-end If-end ","position":"240,"}
{"sequence":"ID-certHash ID-batchFlag Iftest-end If-end If-begin ","position":"240,243,"}
{"sequence":"ID-batchFlag Iftest-end If-end If-begin Iftest-begin ","position":"240,243,"}
{"sequence":"Iftest-end If-end If-begin Iftest-begin ID-merkleHash ","position":"240,243,"}
{"sequence":"If-end If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"240,243,"}
{"sequence":"If-begin Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"243,"}
{"sequence":"Iftest-begin ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"243,"}
{"sequence":"ID-merkleHash Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin ","position":"243,245,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end If-begin Iftest-begin ","position":"243,245,"}
{"sequence":"Literal-TYPE Iftest-end If-begin Iftest-begin ID-revoked ","position":"243,245,"}
{"sequence":"Iftest-end If-begin Iftest-begin ID-revoked ID-merkleHash ","position":"243,245,"}
{"sequence":"If-begin Iftest-begin ID-revoked ID-merkleHash ID-exists ","position":"245,"}
{"sequence":"Iftest-begin ID-revoked ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"245,"}
{"sequence":"ID-revoked ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ","position":"245,"}
{"sequence":"ID-merkleHash ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ","position":"245,"}
{"sequence":"ID-exists Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ID-batchFlag ","position":"245,"}
{"sequence":"Binary_expr-&&(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-revoked ID-merkleHash ID-batchFlag Iftest-end ","position":"245,"}
{"sequence":"ID-revoked ID-merkleHash ID-batchFlag Iftest-end If-end ","position":"245,"}
{"sequence":"ID-merkleHash ID-batchFlag Iftest-end If-end ID-tmpCertHash ","position":"245,248,"}
{"sequence":"ID-batchFlag Iftest-end If-end ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"245,248,"}
{"sequence":"Iftest-end If-end ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ","position":"245,248,"}
{"sequence":"If-end ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-tmpCertHash ","position":"245,248,250,"}
{"sequence":"ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"248,250,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-merkleHash ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-certHash ","position":"248,250,"}
{"sequence":"ID-merkleHash ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-certHash If-end ","position":"248,250,243,"}
{"sequence":"ID-tmpCertHash Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-certHash If-end If-begin ","position":"250,243,253,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-certHash If-end If-begin Iftest-begin ","position":"250,243,253,"}
{"sequence":"ID-certHash If-end If-begin Iftest-begin ID-hashes ","position":"250,243,253,"}
{"sequence":"If-end If-begin Iftest-begin ID-hashes ID-tmpCertHash ","position":"243,253,"}
{"sequence":"If-begin Iftest-begin ID-hashes ID-tmpCertHash ID-exists ","position":"253,"}
{"sequence":"Iftest-begin ID-hashes ID-tmpCertHash ID-exists Iftest-end ","position":"253,"}
{"sequence":"ID-hashes ID-tmpCertHash ID-exists Iftest-end If-begin ","position":"253,254,"}
{"sequence":"ID-tmpCertHash ID-exists Iftest-end If-begin Iftest-begin ","position":"253,254,"}
{"sequence":"ID-exists Iftest-end If-begin Iftest-begin PREDICATE-!= ","position":"253,254,"}
{"sequence":"Iftest-end If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"253,254,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-recoverAddr ","position":"254,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-recoverAddr ID-tmpCertHash ","position":"254,"}
{"sequence":"PREDICATE-!= NORMAL ID-recoverAddr ID-tmpCertHash ID-hashes ","position":"254,"}
{"sequence":"NORMAL ID-recoverAddr ID-tmpCertHash ID-hashes ID-tmpCertHash ","position":"254,"}
{"sequence":"ID-recoverAddr ID-tmpCertHash ID-hashes ID-tmpCertHash ID-sig ","position":"254,"}
{"sequence":"ID-tmpCertHash ID-hashes ID-tmpCertHash ID-sig Binary_expr-!=(null,MEMORY_READ_LOCAL) ","position":"254,"}
{"sequence":"ID-hashes ID-tmpCertHash ID-sig Binary_expr-!=(null,MEMORY_READ_LOCAL) ID-issuer ","position":"254,"}
{"sequence":"ID-tmpCertHash ID-sig Binary_expr-!=(null,MEMORY_READ_LOCAL) ID-issuer Iftest-end ","position":"254,"}
{"sequence":"ID-sig Binary_expr-!=(null,MEMORY_READ_LOCAL) ID-issuer Iftest-end If-end ","position":"254,"}
{"sequence":"Binary_expr-!=(null,MEMORY_READ_LOCAL) ID-issuer Iftest-end If-end If-end ","position":"254,253,"}
{"sequence":"ID-issuer Iftest-end If-end If-end Function_end-internalVerifyCert ","position":"254,253,236,"}
{"sequence":"Iftest-end If-end If-end Function_end-internalVerifyCert Functoin_begin-verifyCert ","position":"254,253,236,263,"}
{"sequence":"If-end If-end Function_end-internalVerifyCert Functoin_begin-verifyCert ParaType-bytes32 ","position":"254,253,236,263,"}
{"sequence":"If-end Function_end-internalVerifyCert Functoin_begin-verifyCert ParaType-bytes32 ParaVar-certHash ","position":"253,236,263,"}
{"sequence":"Function_end-internalVerifyCert Functoin_begin-verifyCert ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ","position":"236,263,"}
{"sequence":"Functoin_begin-verifyCert ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ","position":"263,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-address ","position":"263,"}
{"sequence":"ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-address ParaVar-issuer ","position":"263,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-address ParaVar-issuer ID-isAuthorized ","position":"263,269,"}
{"sequence":"ParaVar-merkleHash ParaType-address ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"263,269,"}
{"sequence":"ParaType-address ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ","position":"263,269,"}
{"sequence":"ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess ","position":"263,269,"}
{"sequence":"ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess If-begin ","position":"269,270,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess If-begin Iftest-begin ","position":"269,270,"}
{"sequence":"NORMAL ID-checkVerifyAccess If-begin Iftest-begin ID-isAuthorized ","position":"269,270,"}
{"sequence":"ID-checkVerifyAccess If-begin Iftest-begin ID-isAuthorized Iftest-end ","position":"269,270,"}
{"sequence":"If-begin Iftest-begin ID-isAuthorized Iftest-end If-end ","position":"270,"}
{"sequence":"Iftest-begin ID-isAuthorized Iftest-end If-end Assign_expr-=(null,null) ","position":"270,274,"}
{"sequence":"ID-isAuthorized Iftest-end If-end Assign_expr-=(null,null) NORMAL ","position":"270,274,"}
{"sequence":"Iftest-end If-end Assign_expr-=(null,null) NORMAL ID-internalVerifyCert ","position":"270,274,"}
{"sequence":"If-end Assign_expr-=(null,null) NORMAL ID-internalVerifyCert ID-certHash ","position":"270,274,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalVerifyCert ID-certHash ID-merkleHash ","position":"274,"}
{"sequence":"NORMAL ID-internalVerifyCert ID-certHash ID-merkleHash ID-issuer ","position":"274,"}
{"sequence":"ID-internalVerifyCert ID-certHash ID-merkleHash ID-issuer Function_end-verifyCert ","position":"274,263,"}
{"sequence":"ID-certHash ID-merkleHash ID-issuer Function_end-verifyCert Functoin_begin-verifyCertWithID ","position":"274,263,278,"}
{"sequence":"ID-merkleHash ID-issuer Function_end-verifyCert Functoin_begin-verifyCertWithID ParaType-bytes32 ","position":"274,263,278,"}
{"sequence":"ID-issuer Function_end-verifyCert Functoin_begin-verifyCertWithID ParaType-bytes32 ParaVar-certHash ","position":"274,263,278,"}
{"sequence":"Function_end-verifyCert Functoin_begin-verifyCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ","position":"263,278,"}
{"sequence":"Functoin_begin-verifyCertWithID ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ","position":"278,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-bytes32 ","position":"278,"}
{"sequence":"ParaVar-certHash ParaType-bytes32 ParaVar-merkleHash ParaType-bytes32 ParaVar-id ","position":"278,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-bytes32 ParaVar-id ParaType-address ","position":"278,"}
{"sequence":"ParaVar-merkleHash ParaType-bytes32 ParaVar-id ParaType-address ParaVar-issuer ","position":"278,"}
{"sequence":"ParaType-bytes32 ParaVar-id ParaType-address ParaVar-issuer ID-isAuthorized ","position":"278,284,"}
{"sequence":"ParaVar-id ParaType-address ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"278,284,"}
{"sequence":"ParaType-address ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ","position":"278,284,"}
{"sequence":"ParaVar-issuer ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess ","position":"278,284,"}
{"sequence":"ID-isAuthorized Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess If-begin ","position":"284,285,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) NORMAL ID-checkVerifyAccess If-begin Iftest-begin ","position":"284,285,"}
{"sequence":"NORMAL ID-checkVerifyAccess If-begin Iftest-begin ID-isAuthorized ","position":"284,285,"}
{"sequence":"ID-checkVerifyAccess If-begin Iftest-begin ID-isAuthorized Iftest-end ","position":"284,285,"}
{"sequence":"If-begin Iftest-begin ID-isAuthorized Iftest-end If-end ","position":"285,"}
{"sequence":"Iftest-begin ID-isAuthorized Iftest-end If-end Function_end-verifyCertWithID ","position":"285,278,"}
{"sequence":"ID-isAuthorized Iftest-end If-end Function_end-verifyCertWithID Functoin_begin-checkVerifyAccess ","position":"285,278,300,"}
{"sequence":"Iftest-end If-end Function_end-verifyCertWithID Functoin_begin-checkVerifyAccess NORMAL ","position":"285,278,300,302,"}
{"sequence":"If-end Function_end-verifyCertWithID Functoin_begin-checkVerifyAccess NORMAL ID-checkAccess ","position":"285,278,300,302,"}
{"sequence":"Function_end-verifyCertWithID Functoin_begin-checkVerifyAccess NORMAL ID-checkAccess ID-msg ","position":"278,300,302,"}
{"sequence":"Functoin_begin-checkVerifyAccess NORMAL ID-checkAccess ID-msg ID-sender ","position":"300,302,"}
{"sequence":"NORMAL ID-checkAccess ID-msg ID-sender ID-ACCESS_VERIFIER ","position":"302,"}
{"sequence":"ID-checkAccess ID-msg ID-sender ID-ACCESS_VERIFIER Function_end-checkVerifyAccess ","position":"302,300,"}
{"sequence":"ID-msg ID-sender ID-ACCESS_VERIFIER Function_end-checkVerifyAccess Functoin_begin-revokeCert ","position":"302,300,307,"}
{"sequence":"ID-sender ID-ACCESS_VERIFIER Function_end-checkVerifyAccess Functoin_begin-revokeCert ParaType-bytes32 ","position":"302,300,307,"}
{"sequence":"ID-ACCESS_VERIFIER Function_end-checkVerifyAccess Functoin_begin-revokeCert ParaType-bytes32 ParaVar-certHash ","position":"302,300,307,"}
{"sequence":"Function_end-checkVerifyAccess Functoin_begin-revokeCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ","position":"300,307,"}
{"sequence":"Functoin_begin-revokeCert ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ","position":"307,"}
{"sequence":"ParaType-bytes32 ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ","position":"307,"}
{"sequence":"ParaVar-certHash ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ","position":"307,"}
{"sequence":"ParaType-bytes ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ParaType-bool ","position":"307,"}
{"sequence":"ParaVar-sigCertHash ParaType-bytes32 ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ","position":"307,"}
{"sequence":"ParaType-bytes32 ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ParaType-uint ","position":"307,"}
{"sequence":"ParaVar-merkleHash ParaType-bool ParaVar-batchFlag ParaType-uint ParaVar-revocationDate ","position":"307,"}
{"sequence":"ParaType-bool ParaVar-batchFlag ParaType-uint ParaVar-revocationDate Assign_expr-=(null,null) ","position":"307,311,"}
{"sequence":"ParaVar-batchFlag ParaType-uint ParaVar-revocationDate Assign_expr-=(null,null) NORMAL ","position":"307,311,"}
{"sequence":"ParaType-uint ParaVar-revocationDate Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ","position":"307,311,"}
{"sequence":"ParaVar-revocationDate Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-certHash ","position":"307,311,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-certHash ID-sigCertHash ","position":"311,"}
{"sequence":"NORMAL ID-internalRevokeCert ID-certHash ID-sigCertHash ID-merkleHash ","position":"311,"}
{"sequence":"ID-internalRevokeCert ID-certHash ID-sigCertHash ID-merkleHash ID-batchFlag ","position":"311,"}
{"sequence":"ID-certHash ID-sigCertHash ID-merkleHash ID-batchFlag ID-revocationDate ","position":"311,"}
{"sequence":"ID-sigCertHash ID-merkleHash ID-batchFlag ID-revocationDate NORMAL ","position":"311,312,"}
{"sequence":"ID-merkleHash ID-batchFlag ID-revocationDate NORMAL ID-LogRevokeCert ","position":"311,312,"}
{"sequence":"ID-batchFlag ID-revocationDate NORMAL ID-LogRevokeCert ID-status ","position":"311,312,"}
{"sequence":"ID-revocationDate NORMAL ID-LogRevokeCert ID-status ID-message ","position":"311,312,"}
{"sequence":"NORMAL ID-LogRevokeCert ID-status ID-message Function_end-revokeCert ","position":"312,307,"}
{"sequence":"ID-LogRevokeCert ID-status ID-message Function_end-revokeCert Functoin_begin-reissueCert ","position":"312,307,317,"}
{"sequence":"ID-status ID-message Function_end-revokeCert Functoin_begin-reissueCert ParaType-bytes32 ","position":"312,307,317,"}
{"sequence":"ID-message Function_end-revokeCert Functoin_begin-reissueCert ParaType-bytes32 ParaVar-revokeCertHash ","position":"312,307,317,"}
{"sequence":"Function_end-revokeCert Functoin_begin-reissueCert ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ","position":"307,317,"}
{"sequence":"Functoin_begin-reissueCert ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ","position":"317,"}
{"sequence":"ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ","position":"317,"}
{"sequence":"ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ","position":"317,"}
{"sequence":"ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ","position":"317,"}
{"sequence":"ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ","position":"317,"}
{"sequence":"ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ParaType-bytes32 ","position":"317,"}
{"sequence":"ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ","position":"317,"}
{"sequence":"ParaType-uint ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ","position":"317,"}
{"sequence":"ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ","position":"317,"}
{"sequence":"ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ParaType-uint ","position":"317,"}
{"sequence":"ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ParaType-uint ParaVar-registrationDate ","position":"317,"}
{"sequence":"ParaType-bytes ParaVar-registerSig ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) ","position":"317,322,"}
{"sequence":"ParaVar-registerSig ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ","position":"317,322,"}
{"sequence":"ParaType-uint ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ","position":"317,322,"}
{"sequence":"ParaVar-registrationDate Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-revokeCertHash ","position":"317,322,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ","position":"322,"}
{"sequence":"NORMAL ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash ","position":"322,"}
{"sequence":"ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ","position":"322,"}
{"sequence":"ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ID-revocationDate ","position":"322,"}
{"sequence":"ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ID-revocationDate If-begin ","position":"322,323,"}
{"sequence":"ID-revokeMerkleHash Literal-TYPE ID-revocationDate If-begin Iftest-begin ","position":"322,323,"}
{"sequence":"Literal-TYPE ID-revocationDate If-begin Iftest-begin PREDICATE-!= ","position":"322,323,"}
{"sequence":"ID-revocationDate If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"322,323,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ","position":"323,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ID-status ","position":"323,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) ","position":"323,"}
{"sequence":"NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= ","position":"323,"}
{"sequence":"ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ","position":"323,"}
{"sequence":"ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ","position":"323,"}
{"sequence":"Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS ","position":"323,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end ","position":"323,"}
{"sequence":"NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ","position":"323,324,"}
{"sequence":"ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ID-LogReissueCert ","position":"323,324,"}
{"sequence":"ID-STATUS_PASS Iftest-end NORMAL ID-LogReissueCert ID-status ","position":"323,324,"}
{"sequence":"Iftest-end NORMAL ID-LogReissueCert ID-status ID-message ","position":"323,324,"}
{"sequence":"NORMAL ID-LogReissueCert ID-status ID-message If-end ","position":"324,323,"}
{"sequence":"ID-LogReissueCert ID-status ID-message If-end Assign_expr-=(null,null) ","position":"324,323,329,"}
{"sequence":"ID-status ID-message If-end Assign_expr-=(null,null) NORMAL ","position":"324,323,329,"}
{"sequence":"ID-message If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ","position":"324,323,329,"}
{"sequence":"If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-registerCertHash ","position":"323,329,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRegisterCert ID-registerCertHash ID-registerSig ","position":"329,"}
{"sequence":"NORMAL ID-internalRegisterCert ID-registerCertHash ID-registerSig ID-registrationDate ","position":"329,"}
{"sequence":"ID-internalRegisterCert ID-registerCertHash ID-registerSig ID-registrationDate NORMAL ","position":"329,330,"}
{"sequence":"ID-registerCertHash ID-registerSig ID-registrationDate NORMAL ID-LogReissueCert ","position":"329,330,"}
{"sequence":"ID-registerSig ID-registrationDate NORMAL ID-LogReissueCert ID-status ","position":"329,330,"}
{"sequence":"ID-registrationDate NORMAL ID-LogReissueCert ID-status ID-message ","position":"329,330,"}
{"sequence":"NORMAL ID-LogReissueCert ID-status ID-message If-begin ","position":"330,331,"}
{"sequence":"ID-LogReissueCert ID-status ID-message If-begin Iftest-begin ","position":"330,331,"}
{"sequence":"ID-status ID-message If-begin Iftest-begin PREDICATE-!= ","position":"330,331,"}
{"sequence":"ID-message If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"330,331,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ","position":"331,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ID-status ","position":"331,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) ","position":"331,"}
{"sequence":"NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= ","position":"331,"}
{"sequence":"ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ","position":"331,"}
{"sequence":"ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ","position":"331,"}
{"sequence":"Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS ","position":"331,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end ","position":"331,"}
{"sequence":"NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ","position":"331,332,"}
{"sequence":"ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ID-revert ","position":"331,332,"}
{"sequence":"ID-STATUS_PASS Iftest-end NORMAL ID-revert If-end ","position":"331,332,"}
{"sequence":"Iftest-end NORMAL ID-revert If-end NORMAL ","position":"331,332,335,"}
{"sequence":"NORMAL ID-revert If-end NORMAL ID-LogReissueCert ","position":"332,331,335,"}
{"sequence":"ID-revert If-end NORMAL ID-LogReissueCert ID-STATUS_PASS ","position":"332,331,335,"}
{"sequence":"If-end NORMAL ID-LogReissueCert ID-STATUS_PASS Literal-TYPE ","position":"331,335,"}
{"sequence":"NORMAL ID-LogReissueCert ID-STATUS_PASS Literal-TYPE Function_end-reissueCert ","position":"335,317,"}
{"sequence":"ID-LogReissueCert ID-STATUS_PASS Literal-TYPE Function_end-reissueCert Functoin_begin-reissueCertWithID ","position":"335,317,339,"}
{"sequence":"ID-STATUS_PASS Literal-TYPE Function_end-reissueCert Functoin_begin-reissueCertWithID ParaType-bytes32 ","position":"335,317,339,"}
{"sequence":"Literal-TYPE Function_end-reissueCert Functoin_begin-reissueCertWithID ParaType-bytes32 ParaVar-revokeCertHash ","position":"335,317,339,"}
{"sequence":"Function_end-reissueCert Functoin_begin-reissueCertWithID ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ","position":"317,339,"}
{"sequence":"Functoin_begin-reissueCertWithID ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ","position":"339,"}
{"sequence":"ParaType-bytes32 ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ","position":"339,"}
{"sequence":"ParaVar-revokeCertHash ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ","position":"339,"}
{"sequence":"ParaType-bytes ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ","position":"339,"}
{"sequence":"ParaVar-revokeSigCertHash ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ","position":"339,"}
{"sequence":"ParaType-bytes32 ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ParaType-bytes32 ","position":"339,"}
{"sequence":"ParaVar-revokeMerkleHash ParaType-uint ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ","position":"339,"}
{"sequence":"ParaType-uint ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ","position":"339,"}
{"sequence":"ParaVar-revocationDate ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ","position":"339,"}
{"sequence":"ParaType-bytes32 ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ParaType-bytes32 ","position":"339,"}
{"sequence":"ParaVar-registerCertHash ParaType-bytes ParaVar-registerSig ParaType-bytes32 ParaVar-registerMerkleHash ","position":"339,"}
{"sequence":"ParaType-bytes ParaVar-registerSig ParaType-bytes32 ParaVar-registerMerkleHash ParaType-uint ","position":"339,"}
{"sequence":"ParaVar-registerSig ParaType-bytes32 ParaVar-registerMerkleHash ParaType-uint ParaVar-registrationDate ","position":"339,"}
{"sequence":"ParaType-bytes32 ParaVar-registerMerkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ","position":"339,"}
{"sequence":"ParaVar-registerMerkleHash ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id ","position":"339,"}
{"sequence":"ParaType-uint ParaVar-registrationDate ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) ","position":"339,344,"}
{"sequence":"ParaVar-registrationDate ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) NORMAL ","position":"339,344,"}
{"sequence":"ParaType-bytes32 ParaVar-id Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ","position":"339,344,"}
{"sequence":"ParaVar-id Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-revokeCertHash ","position":"339,344,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ","position":"344,"}
{"sequence":"NORMAL ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash ","position":"344,"}
{"sequence":"ID-internalRevokeCert ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ","position":"344,"}
{"sequence":"ID-revokeCertHash ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ID-revocationDate ","position":"344,"}
{"sequence":"ID-revokeSigCertHash ID-revokeMerkleHash Literal-TYPE ID-revocationDate If-begin ","position":"344,345,"}
{"sequence":"ID-revokeMerkleHash Literal-TYPE ID-revocationDate If-begin Iftest-begin ","position":"344,345,"}
{"sequence":"Literal-TYPE ID-revocationDate If-begin Iftest-begin PREDICATE-!= ","position":"344,345,"}
{"sequence":"ID-revocationDate If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"344,345,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ","position":"345,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ID-status ","position":"345,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) ","position":"345,"}
{"sequence":"NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= ","position":"345,"}
{"sequence":"ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ","position":"345,"}
{"sequence":"ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ","position":"345,"}
{"sequence":"Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS ","position":"345,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end ","position":"345,"}
{"sequence":"NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ","position":"345,346,"}
{"sequence":"ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ID-LogReissueCertWithID ","position":"345,346,"}
{"sequence":"ID-STATUS_PASS Iftest-end NORMAL ID-LogReissueCertWithID ID-status ","position":"345,346,"}
{"sequence":"Iftest-end NORMAL ID-LogReissueCertWithID ID-status ID-message ","position":"345,346,"}
{"sequence":"NORMAL ID-LogReissueCertWithID ID-status ID-message If-end ","position":"346,345,"}
{"sequence":"ID-LogReissueCertWithID ID-status ID-message If-end Assign_expr-=(null,null) ","position":"346,345,351,"}
{"sequence":"ID-status ID-message If-end Assign_expr-=(null,null) NORMAL ","position":"346,345,351,"}
{"sequence":"ID-message If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ","position":"346,345,351,"}
{"sequence":"If-end Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ID-registerCertHash ","position":"345,351,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-internalRegisterCertWithID ID-registerCertHash ID-registerSig ","position":"351,"}
{"sequence":"NORMAL ID-internalRegisterCertWithID ID-registerCertHash ID-registerSig ID-registerMerkleHash ","position":"351,"}
{"sequence":"ID-internalRegisterCertWithID ID-registerCertHash ID-registerSig ID-registerMerkleHash ID-registrationDate ","position":"351,"}
{"sequence":"ID-registerCertHash ID-registerSig ID-registerMerkleHash ID-registrationDate ID-id ","position":"351,"}
{"sequence":"ID-registerSig ID-registerMerkleHash ID-registrationDate ID-id NORMAL ","position":"351,352,"}
{"sequence":"ID-registerMerkleHash ID-registrationDate ID-id NORMAL ID-LogReissueCertWithID ","position":"351,352,"}
{"sequence":"ID-registrationDate ID-id NORMAL ID-LogReissueCertWithID ID-status ","position":"351,352,"}
{"sequence":"ID-id NORMAL ID-LogReissueCertWithID ID-status ID-message ","position":"351,352,"}
{"sequence":"NORMAL ID-LogReissueCertWithID ID-status ID-message If-begin ","position":"352,353,"}
{"sequence":"ID-LogReissueCertWithID ID-status ID-message If-begin Iftest-begin ","position":"352,353,"}
{"sequence":"ID-status ID-message If-begin Iftest-begin PREDICATE-!= ","position":"352,353,"}
{"sequence":"ID-message If-begin Iftest-begin PREDICATE-!= NORMAL ","position":"352,353,"}
{"sequence":"If-begin Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ","position":"353,"}
{"sequence":"Iftest-begin PREDICATE-!= NORMAL ID-keccak256 ID-status ","position":"353,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) ","position":"353,"}
{"sequence":"NORMAL ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= ","position":"353,"}
{"sequence":"ID-keccak256 ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ","position":"353,"}
{"sequence":"ID-status Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ","position":"353,"}
{"sequence":"Binary_expr-!=(null,null) PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS ","position":"353,"}
{"sequence":"PREDICATE-!= NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end ","position":"353,"}
{"sequence":"NORMAL ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ","position":"353,354,"}
{"sequence":"ID-keccak256 ID-STATUS_PASS Iftest-end NORMAL ID-revert ","position":"353,354,"}
{"sequence":"ID-STATUS_PASS Iftest-end NORMAL ID-revert If-end ","position":"353,354,"}
{"sequence":"Iftest-end NORMAL ID-revert If-end NORMAL ","position":"353,354,357,"}
{"sequence":"NORMAL ID-revert If-end NORMAL ID-LogReissueCertWithID ","position":"354,353,357,"}
{"sequence":"ID-revert If-end NORMAL ID-LogReissueCertWithID ID-STATUS_PASS ","position":"354,353,357,"}
{"sequence":"If-end NORMAL ID-LogReissueCertWithID ID-STATUS_PASS Literal-TYPE ","position":"353,357,"}
{"sequence":"NORMAL ID-LogReissueCertWithID ID-STATUS_PASS Literal-TYPE Function_end-reissueCertWithID ","position":"357,339,"}
{"sequence":"ID-LogReissueCertWithID ID-STATUS_PASS Literal-TYPE Function_end-reissueCertWithID Functoin_begin-recoverAddr ","position":"357,339,360,"}
{"sequence":"ID-STATUS_PASS Literal-TYPE Function_end-reissueCertWithID Functoin_begin-recoverAddr ParaType-bytes32 ","position":"357,339,360,"}
{"sequence":"Literal-TYPE Function_end-reissueCertWithID Functoin_begin-recoverAddr ParaType-bytes32 ParaVar-hash ","position":"357,339,360,"}
{"sequence":"Function_end-reissueCertWithID Functoin_begin-recoverAddr ParaType-bytes32 ParaVar-hash ParaType-bytes ","position":"339,360,"}
{"sequence":"Functoin_begin-recoverAddr ParaType-bytes32 ParaVar-hash ParaType-bytes ParaVar-sig ","position":"360,"}
{"sequence":"ParaType-bytes32 ParaVar-hash ParaType-bytes ParaVar-sig If-begin ","position":"360,366,"}
{"sequence":"ParaVar-hash ParaType-bytes ParaVar-sig If-begin Iftest-begin ","position":"360,366,"}
{"sequence":"ParaType-bytes ParaVar-sig If-begin Iftest-begin ID-sig ","position":"360,366,"}
{"sequence":"ParaVar-sig If-begin Iftest-begin ID-sig ID-length ","position":"360,366,"}
{"sequence":"If-begin Iftest-begin ID-sig ID-length Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"366,"}
{"sequence":"Iftest-begin ID-sig ID-length Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"366,"}
{"sequence":"ID-sig ID-length Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"366,"}
{"sequence":"ID-length Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end NORMAL ","position":"366,367,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end NORMAL ID-address ","position":"366,367,"}
{"sequence":"Literal-TYPE Iftest-end NORMAL ID-address Literal-TYPE ","position":"366,367,"}
{"sequence":"Iftest-end NORMAL ID-address Literal-TYPE If-end ","position":"366,367,"}
{"sequence":"NORMAL ID-address Literal-TYPE If-end If-begin ","position":"367,366,378,"}
{"sequence":"ID-address Literal-TYPE If-end If-begin Iftest-begin ","position":"367,366,378,"}
{"sequence":"Literal-TYPE If-end If-begin Iftest-begin ID-v ","position":"367,366,378,"}
{"sequence":"If-end If-begin Iftest-begin ID-v Binary_expr-<(MEMORY_READ_LOCAL,LITERAL) ","position":"366,378,"}
{"sequence":"If-begin Iftest-begin ID-v Binary_expr-<(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"378,"}
{"sequence":"Iftest-begin ID-v Binary_expr-<(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"378,"}
{"sequence":"ID-v Binary_expr-<(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ID-v ","position":"378,379,"}
{"sequence":"Binary_expr-<(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ID-v PREDICATE-< ","position":"378,379,"}
{"sequence":"Literal-TYPE Iftest-end ID-v PREDICATE-< Assign_expr-+=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"378,379,"}
{"sequence":"Iftest-end ID-v PREDICATE-< Assign_expr-+=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"378,379,"}
{"sequence":"ID-v PREDICATE-< Assign_expr-+=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end ","position":"379,378,"}
{"sequence":"PREDICATE-< Assign_expr-+=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end If-begin ","position":"379,378,383,"}
{"sequence":"Assign_expr-+=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE If-end If-begin Iftest-begin ","position":"379,378,383,"}
{"sequence":"Literal-TYPE If-end If-begin Iftest-begin ID-v ","position":"379,378,383,"}
{"sequence":"If-end If-begin Iftest-begin ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"378,383,"}
{"sequence":"If-begin Iftest-begin ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"383,"}
{"sequence":"Iftest-begin ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-&&(null,null) ","position":"383,"}
{"sequence":"ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-&&(null,null) ID-v ","position":"383,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-&&(null,null) ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) ","position":"383,"}
{"sequence":"Literal-TYPE Binary_expr-&&(null,null) ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"383,"}
{"sequence":"Binary_expr-&&(null,null) ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"383,"}
{"sequence":"ID-v Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end NORMAL ","position":"383,384,"}
{"sequence":"Binary_expr-!=(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end NORMAL ID-address ","position":"383,384,"}
{"sequence":"Literal-TYPE Iftest-end NORMAL ID-address Literal-TYPE ","position":"383,384,"}
{"sequence":"Iftest-end NORMAL ID-address Literal-TYPE NORMAL ","position":"383,384,386,"}
{"sequence":"NORMAL ID-address Literal-TYPE NORMAL ID-ecrecover ","position":"384,386,"}
{"sequence":"ID-address Literal-TYPE NORMAL ID-ecrecover ID-hash ","position":"384,386,"}
{"sequence":"Literal-TYPE NORMAL ID-ecrecover ID-hash ID-v ","position":"384,386,"}
{"sequence":"NORMAL ID-ecrecover ID-hash ID-v ID-r ","position":"386,"}
{"sequence":"ID-ecrecover ID-hash ID-v ID-r ID-s ","position":"386,"}
{"sequence":"ID-hash ID-v ID-r ID-s If-end ","position":"386,383,"}
{"sequence":"ID-v ID-r ID-s If-end Function_end-recoverAddr ","position":"386,383,360,"}
