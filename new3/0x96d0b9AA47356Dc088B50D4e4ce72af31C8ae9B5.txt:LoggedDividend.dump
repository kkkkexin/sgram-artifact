{"sequence":"Functoin_begin-LoggedDividend ParaType-uint256 ParaVar-initialSupply ","position":"238,239,"}
{"sequence":"ParaType-uint256 ParaVar-initialSupply ParaType-string ","position":"239,240,"}
{"sequence":"ParaVar-initialSupply ParaType-string ParaVar-tokenName ","position":"239,240,"}
{"sequence":"ParaType-string ParaVar-tokenName ParaType-uint8 ","position":"240,241,"}
{"sequence":"ParaVar-tokenName ParaType-uint8 ParaVar-decimalUnits ","position":"240,241,"}
{"sequence":"ParaType-uint8 ParaVar-decimalUnits ParaType-string ","position":"241,242,"}
{"sequence":"ParaVar-decimalUnits ParaType-string ParaVar-tokenSymbol ","position":"241,242,"}
{"sequence":"ParaType-string ParaVar-tokenSymbol ParaType-bool ","position":"242,243,"}
{"sequence":"ParaVar-tokenSymbol ParaType-bool ParaVar-transferAllSupplyToOwner ","position":"242,243,"}
{"sequence":"ParaType-bool ParaVar-transferAllSupplyToOwner ParaType-bool ","position":"243,244,"}
{"sequence":"ParaVar-transferAllSupplyToOwner ParaType-bool ParaVar-_locked ","position":"243,244,"}
{"sequence":"ParaType-bool ParaVar-_locked Function_end-LoggedDividend ","position":"244,238,"}
{"sequence":"ParaVar-_locked Function_end-LoggedDividend Functoin_begin-addDividend ","position":"244,238,249,"}
{"sequence":"Function_end-LoggedDividend Functoin_begin-addDividend ParaType-uint256 ","position":"238,249,"}
{"sequence":"Functoin_begin-addDividend ParaType-uint256 ParaVar-recycleTime ","position":"249,"}
{"sequence":"ParaType-uint256 ParaVar-recycleTime NORMAL ","position":"249,250,"}
{"sequence":"ParaVar-recycleTime NORMAL ID-require ","position":"249,250,"}
{"sequence":"NORMAL ID-require ID-msg ","position":"250,"}
{"sequence":"ID-require ID-msg ID-value ","position":"250,"}
{"sequence":"ID-msg ID-value Binary_expr->(MEMORY_READ_LOCAL,LITERAL) ","position":"250,"}
{"sequence":"ID-value Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"250,"}
{"sequence":"Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Assign_expr-=(null,MEMORY_READ_LOCAL) ","position":"250,252,"}
{"sequence":"Literal-TYPE Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ","position":"250,252,"}
{"sequence":"Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ID-length ","position":"252,"}
{"sequence":"ID-dividends ID-length Assign_expr-=(null,null) ","position":"252,253,"}
{"sequence":"ID-length Assign_expr-=(null,null) NORMAL ","position":"252,253,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-valueAt ","position":"253,"}
{"sequence":"NORMAL ID-valueAt ID-loggedTotalSupply ","position":"253,"}
{"sequence":"ID-valueAt ID-loggedTotalSupply ID-block ","position":"253,"}
{"sequence":"ID-loggedTotalSupply ID-block ID-number ","position":"253,"}
{"sequence":"ID-block ID-number NORMAL ","position":"253,255,"}
{"sequence":"ID-number NORMAL ID-dividends ","position":"253,255,"}
{"sequence":"NORMAL ID-dividends ID-push ","position":"255,"}
{"sequence":"ID-dividends ID-push NORMAL ","position":"255,256,"}
{"sequence":"ID-push NORMAL ID-Dividend ","position":"255,256,"}
{"sequence":"NORMAL ID-Dividend ID-id ","position":"256,257,"}
{"sequence":"ID-Dividend ID-id ID-block ","position":"256,257,258,"}
{"sequence":"ID-id ID-block ID-number ","position":"257,258,"}
{"sequence":"ID-block ID-number ID-now() ","position":"258,259,"}
{"sequence":"ID-number ID-now() ID-msg ","position":"258,259,260,"}
{"sequence":"ID-now() ID-msg ID-value ","position":"259,260,"}
{"sequence":"ID-msg ID-value Literal-TYPE ","position":"260,261,"}
{"sequence":"ID-value Literal-TYPE Literal-TYPE ","position":"260,261,262,"}
{"sequence":"Literal-TYPE Literal-TYPE ID-_totalSupply ","position":"261,262,263,"}
{"sequence":"Literal-TYPE ID-_totalSupply ID-recycleTime ","position":"262,263,264,"}
{"sequence":"ID-_totalSupply ID-recycleTime Literal-TYPE ","position":"263,264,265,"}
{"sequence":"ID-recycleTime Literal-TYPE NORMAL ","position":"264,265,269,"}
{"sequence":"Literal-TYPE NORMAL ID-DividendTransfered ","position":"265,269,"}
{"sequence":"NORMAL ID-DividendTransfered ID-id ","position":"269,"}
{"sequence":"ID-DividendTransfered ID-id ID-msg ","position":"269,"}
{"sequence":"ID-id ID-msg ID-sender ","position":"269,"}
{"sequence":"ID-msg ID-sender ID-block ","position":"269,"}
{"sequence":"ID-sender ID-block ID-number ","position":"269,"}
{"sequence":"ID-block ID-number ID-msg ","position":"269,"}
{"sequence":"ID-number ID-msg ID-value ","position":"269,"}
{"sequence":"ID-msg ID-value ID-_totalSupply ","position":"269,"}
{"sequence":"ID-value ID-_totalSupply Function_end-addDividend ","position":"269,249,"}
{"sequence":"ID-_totalSupply Function_end-addDividend Functoin_begin-claimDividend ","position":"269,249,272,"}
{"sequence":"Function_end-addDividend Functoin_begin-claimDividend ParaType-uint256 ","position":"249,272,"}
{"sequence":"Functoin_begin-claimDividend ParaType-uint256 ParaVar-dividendId ","position":"272,"}
{"sequence":"ParaType-uint256 ParaVar-dividendId If-begin ","position":"272,273,"}
{"sequence":"ParaVar-dividendId If-begin Iftest-begin ","position":"272,273,"}
{"sequence":"If-begin Iftest-begin ID-dividends ","position":"273,"}
{"sequence":"Iftest-begin ID-dividends ID-length ","position":"273,"}
{"sequence":"ID-dividends ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) ","position":"273,"}
{"sequence":"ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"273,"}
{"sequence":"Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ","position":"273,"}
{"sequence":"Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId ","position":"273,"}
{"sequence":"Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId Iftest-end ","position":"273,"}
{"sequence":"ID-dividendId Iftest-end Literal-TYPE ","position":"273,274,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"273,274,"}
{"sequence":"Literal-TYPE If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ","position":"274,273,277,"}
{"sequence":"If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ","position":"273,277,"}
{"sequence":"Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ID-dividendId ","position":"277,"}
{"sequence":"ID-dividends ID-dividendId If-begin ","position":"277,279,"}
{"sequence":"ID-dividendId If-begin Iftest-begin ","position":"277,279,"}
{"sequence":"If-begin Iftest-begin ID-dividend ","position":"279,"}
{"sequence":"Iftest-begin ID-dividend ID-claimed ","position":"279,"}
{"sequence":"ID-dividend ID-claimed ID-msg ","position":"279,"}
{"sequence":"ID-claimed ID-msg ID-sender ","position":"279,"}
{"sequence":"ID-msg ID-sender Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"279,"}
{"sequence":"ID-sender Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"279,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"279,"}
{"sequence":"Literal-TYPE Iftest-end Literal-TYPE ","position":"279,280,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"279,280,"}
{"sequence":"Literal-TYPE If-end If-begin ","position":"280,279,283,"}
{"sequence":"If-end If-begin Iftest-begin ","position":"279,283,"}
{"sequence":"If-begin Iftest-begin ID-dividend ","position":"283,"}
{"sequence":"Iftest-begin ID-dividend ID-recycled ","position":"283,"}
{"sequence":"ID-dividend ID-recycled Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"283,"}
{"sequence":"ID-recycled Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"283,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"283,"}
{"sequence":"Literal-TYPE Iftest-end Literal-TYPE ","position":"283,284,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"283,284,"}
{"sequence":"Literal-TYPE If-end If-begin ","position":"284,283,287,"}
{"sequence":"If-end If-begin Iftest-begin ","position":"283,287,"}
{"sequence":"If-begin Iftest-begin ID-now(IF-) ","position":"287,"}
{"sequence":"Iftest-begin ID-now(IF-) Binary_expr->=(MEMORY_READ_LOCAL,null) ","position":"287,"}
{"sequence":"ID-now(IF-) Binary_expr->=(MEMORY_READ_LOCAL,null) ID-dividend ","position":"287,"}
{"sequence":"Binary_expr->=(MEMORY_READ_LOCAL,null) ID-dividend ID-time ","position":"287,"}
{"sequence":"ID-dividend ID-time Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"287,"}
{"sequence":"ID-time Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ","position":"287,"}
{"sequence":"Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ID-recycleTime ","position":"287,"}
{"sequence":"ID-dividend ID-recycleTime Iftest-end ","position":"287,"}
{"sequence":"ID-recycleTime Iftest-end Literal-TYPE ","position":"287,288,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"287,288,"}
{"sequence":"Literal-TYPE If-end Assign_expr-=(null,null) ","position":"288,287,291,"}
{"sequence":"If-end Assign_expr-=(null,null) NORMAL ","position":"287,291,"}
{"sequence":"Assign_expr-=(null,null) NORMAL ID-valueAt ","position":"291,"}
{"sequence":"NORMAL ID-valueAt ID-loggedBalances ","position":"291,"}
{"sequence":"ID-valueAt ID-loggedBalances ID-msg ","position":"291,"}
{"sequence":"ID-loggedBalances ID-msg ID-sender ","position":"291,"}
{"sequence":"ID-msg ID-sender ID-dividend ","position":"291,"}
{"sequence":"ID-sender ID-dividend ID-block ","position":"291,"}
{"sequence":"ID-dividend ID-block If-begin ","position":"291,293,"}
{"sequence":"ID-block If-begin Iftest-begin ","position":"291,293,"}
{"sequence":"If-begin Iftest-begin ID-balance ","position":"293,"}
{"sequence":"Iftest-begin ID-balance Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"293,"}
{"sequence":"ID-balance Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"293,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"293,"}
{"sequence":"Literal-TYPE Iftest-end Literal-TYPE ","position":"293,294,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"293,294,"}
{"sequence":"Literal-TYPE If-end Assign_expr-=(null,null) ","position":"294,293,297,"}
{"sequence":"If-end Assign_expr-=(null,null) ID-balance ","position":"293,297,"}
{"sequence":"Assign_expr-=(null,null) ID-balance Binary_expr-*(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"297,"}
{"sequence":"ID-balance Binary_expr-*(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ","position":"297,"}
{"sequence":"Binary_expr-*(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ID-amount ","position":"297,"}
{"sequence":"ID-dividend ID-amount Binary_expr-/(null,MEMORY_READ_LOCAL) ","position":"297,"}
{"sequence":"ID-amount Binary_expr-/(null,MEMORY_READ_LOCAL) ID-dividend ","position":"297,"}
{"sequence":"Binary_expr-/(null,MEMORY_READ_LOCAL) ID-dividend ID-totalSupply ","position":"297,"}
{"sequence":"ID-dividend ID-totalSupply ID-dividend ","position":"297,299,"}
{"sequence":"ID-totalSupply ID-dividend ID-claimed ","position":"297,299,"}
{"sequence":"ID-dividend ID-claimed ID-msg ","position":"299,"}
{"sequence":"ID-claimed ID-msg ID-sender ","position":"299,"}
{"sequence":"ID-msg ID-sender Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"299,"}
{"sequence":"ID-sender Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"299,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ID-dividend ","position":"299,301,"}
{"sequence":"Literal-TYPE ID-dividend ID-claimedAmount ","position":"299,301,"}
{"sequence":"ID-dividend ID-claimedAmount Assign_expr-=(MEMORY_WRITE_LOCAL,null) ","position":"301,"}
{"sequence":"ID-claimedAmount Assign_expr-=(MEMORY_WRITE_LOCAL,null) ID-dividend ","position":"301,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,null) ID-dividend ID-claimedAmount ","position":"301,"}
{"sequence":"ID-dividend ID-claimedAmount Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"301,"}
{"sequence":"ID-claimedAmount Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-claim ","position":"301,"}
{"sequence":"Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-claim If-begin ","position":"301,303,"}
{"sequence":"ID-claim If-begin Iftest-begin ","position":"301,303,"}
{"sequence":"If-begin Iftest-begin ID-claim ","position":"303,"}
{"sequence":"Iftest-begin ID-claim Binary_expr->(MEMORY_READ_LOCAL,LITERAL) ","position":"303,"}
{"sequence":"ID-claim Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"303,"}
{"sequence":"Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"303,"}
{"sequence":"Literal-TYPE Iftest-end CALL_MIN_GAS ","position":"303,304,"}
{"sequence":"Iftest-end CALL_MIN_GAS ID-msg ","position":"303,304,"}
{"sequence":"CALL_MIN_GAS ID-msg ID-sender ","position":"304,"}
{"sequence":"ID-msg ID-sender ID-transfer ","position":"304,"}
{"sequence":"ID-sender ID-transfer ID-claim ","position":"304,"}
{"sequence":"ID-transfer ID-claim NORMAL ","position":"304,305,"}
{"sequence":"ID-claim NORMAL ID-DividendClaimed ","position":"304,305,"}
{"sequence":"NORMAL ID-DividendClaimed ID-dividendId ","position":"305,"}
{"sequence":"ID-DividendClaimed ID-dividendId ID-msg ","position":"305,"}
{"sequence":"ID-dividendId ID-msg ID-sender ","position":"305,"}
{"sequence":"ID-msg ID-sender ID-claim ","position":"305,"}
{"sequence":"ID-sender ID-claim Literal-TYPE ","position":"305,307,"}
{"sequence":"ID-claim Literal-TYPE If-end ","position":"305,307,303,"}
{"sequence":"Literal-TYPE If-end Literal-TYPE ","position":"307,303,310,"}
{"sequence":"If-end Literal-TYPE Function_end-claimDividend ","position":"303,310,272,"}
{"sequence":"Literal-TYPE Function_end-claimDividend Functoin_begin-claimDividends ","position":"310,272,313,"}
{"sequence":"Function_end-claimDividend Functoin_begin-claimDividends NORMAL ","position":"272,313,314,"}
{"sequence":"Functoin_begin-claimDividends NORMAL ID-require ","position":"313,314,"}
{"sequence":"NORMAL ID-require ID-dividendsClaimed ","position":"314,"}
{"sequence":"ID-require ID-dividendsClaimed ID-msg ","position":"314,"}
{"sequence":"ID-dividendsClaimed ID-msg ID-sender ","position":"314,"}
{"sequence":"ID-msg ID-sender Binary_expr-<(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"314,"}
{"sequence":"ID-sender Binary_expr-<(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividends ","position":"314,"}
{"sequence":"Binary_expr-<(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividends ID-length ","position":"314,"}
{"sequence":"ID-dividends ID-length Function_end-claimDividends ","position":"314,313,"}
{"sequence":"ID-length Function_end-claimDividends Functoin_begin-recycleDividend ","position":"314,313,323,"}
{"sequence":"Function_end-claimDividends Functoin_begin-recycleDividend ParaType-uint256 ","position":"313,323,"}
{"sequence":"Functoin_begin-recycleDividend ParaType-uint256 ParaVar-dividendId ","position":"323,"}
{"sequence":"ParaType-uint256 ParaVar-dividendId If-begin ","position":"323,324,"}
{"sequence":"ParaVar-dividendId If-begin Iftest-begin ","position":"323,324,"}
{"sequence":"If-begin Iftest-begin ID-dividends ","position":"324,"}
{"sequence":"Iftest-begin ID-dividends ID-length ","position":"324,"}
{"sequence":"ID-dividends ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) ","position":"324,"}
{"sequence":"ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"324,"}
{"sequence":"Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ","position":"324,"}
{"sequence":"Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId ","position":"324,"}
{"sequence":"Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId Iftest-end ","position":"324,"}
{"sequence":"ID-dividendId Iftest-end Literal-TYPE ","position":"324,325,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"324,325,"}
{"sequence":"Literal-TYPE If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ","position":"325,324,328,"}
{"sequence":"If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ","position":"324,328,"}
{"sequence":"Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ID-dividendId ","position":"328,"}
{"sequence":"ID-dividends ID-dividendId If-begin ","position":"328,330,"}
{"sequence":"ID-dividendId If-begin Iftest-begin ","position":"328,330,"}
{"sequence":"If-begin Iftest-begin ID-dividend ","position":"330,"}
{"sequence":"Iftest-begin ID-dividend ID-recycled ","position":"330,"}
{"sequence":"ID-dividend ID-recycled Iftest-end ","position":"330,"}
{"sequence":"ID-recycled Iftest-end Literal-TYPE ","position":"330,331,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"330,331,"}
{"sequence":"Literal-TYPE If-end ID-dividend ","position":"331,330,334,"}
{"sequence":"If-end ID-dividend ID-recycled ","position":"330,334,"}
{"sequence":"ID-dividend ID-recycled Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) ","position":"334,"}
{"sequence":"ID-recycled Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE ","position":"334,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,LITERAL) Literal-TYPE Literal-TYPE ","position":"334,336,"}
{"sequence":"Literal-TYPE Literal-TYPE Function_end-recycleDividend ","position":"334,336,323,"}
{"sequence":"Literal-TYPE Function_end-recycleDividend Functoin_begin-refundUnclaimedEthers ","position":"336,323,339,"}
{"sequence":"Function_end-recycleDividend Functoin_begin-refundUnclaimedEthers ParaType-uint256 ","position":"323,339,"}
{"sequence":"Functoin_begin-refundUnclaimedEthers ParaType-uint256 ParaVar-dividendId ","position":"339,"}
{"sequence":"ParaType-uint256 ParaVar-dividendId If-begin ","position":"339,340,"}
{"sequence":"ParaVar-dividendId If-begin Iftest-begin ","position":"339,340,"}
{"sequence":"If-begin Iftest-begin ID-dividends ","position":"340,"}
{"sequence":"Iftest-begin ID-dividends ID-length ","position":"340,"}
{"sequence":"ID-dividends ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) ","position":"340,"}
{"sequence":"ID-length Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"340,"}
{"sequence":"Binary_expr--(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ","position":"340,"}
{"sequence":"Literal-TYPE Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId ","position":"340,"}
{"sequence":"Binary_expr-<(null,MEMORY_READ_LOCAL) ID-dividendId Iftest-end ","position":"340,"}
{"sequence":"ID-dividendId Iftest-end Literal-TYPE ","position":"340,341,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"340,341,"}
{"sequence":"Literal-TYPE If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ","position":"341,340,344,"}
{"sequence":"If-end Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ","position":"340,344,"}
{"sequence":"Assign_expr-=(null,MEMORY_READ_LOCAL) ID-dividends ID-dividendId ","position":"344,"}
{"sequence":"ID-dividends ID-dividendId If-begin ","position":"344,346,"}
{"sequence":"ID-dividendId If-begin Iftest-begin ","position":"344,346,"}
{"sequence":"If-begin Iftest-begin ID-dividend ","position":"346,"}
{"sequence":"Iftest-begin ID-dividend ID-recycled ","position":"346,"}
{"sequence":"ID-dividend ID-recycled Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) ","position":"346,"}
{"sequence":"ID-recycled Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"346,"}
{"sequence":"Binary_expr-==(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"346,"}
{"sequence":"Literal-TYPE Iftest-end If-begin ","position":"346,347,"}
{"sequence":"Iftest-end If-begin Iftest-begin ","position":"346,347,"}
{"sequence":"If-begin Iftest-begin ID-now(IF-IF-) ","position":"347,"}
{"sequence":"Iftest-begin ID-now(IF-IF-) Binary_expr-<(MEMORY_READ_LOCAL,null) ","position":"347,"}
{"sequence":"ID-now(IF-IF-) Binary_expr-<(MEMORY_READ_LOCAL,null) ID-dividend ","position":"347,"}
{"sequence":"Binary_expr-<(MEMORY_READ_LOCAL,null) ID-dividend ID-time ","position":"347,"}
{"sequence":"ID-dividend ID-time Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"347,"}
{"sequence":"ID-time Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ","position":"347,"}
{"sequence":"Binary_expr-+(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ID-recycleTime ","position":"347,"}
{"sequence":"ID-dividend ID-recycleTime Iftest-end ","position":"347,"}
{"sequence":"ID-recycleTime Iftest-end Literal-TYPE ","position":"347,348,"}
{"sequence":"Iftest-end Literal-TYPE If-end ","position":"347,348,"}
{"sequence":"Literal-TYPE If-end If-end ","position":"348,347,346,"}
{"sequence":"If-end If-end Assign_expr-=(null,null) ","position":"347,346,352,"}
{"sequence":"If-end Assign_expr-=(null,null) ID-dividend ","position":"346,352,"}
{"sequence":"Assign_expr-=(null,null) ID-dividend ID-amount ","position":"352,"}
{"sequence":"ID-dividend ID-amount Binary_expr--(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ","position":"352,"}
{"sequence":"ID-amount Binary_expr--(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ","position":"352,"}
{"sequence":"Binary_expr--(MEMORY_READ_LOCAL,MEMORY_READ_LOCAL) ID-dividend ID-claimedAmount ","position":"352,"}
{"sequence":"ID-dividend ID-claimedAmount ID-dividend ","position":"352,354,"}
{"sequence":"ID-claimedAmount ID-dividend ID-transferedBack ","position":"352,354,"}
{"sequence":"ID-dividend ID-transferedBack Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ","position":"354,"}
{"sequence":"ID-transferedBack Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-claimedBackAmount ","position":"354,"}
{"sequence":"Assign_expr-=(MEMORY_WRITE_LOCAL,MEMORY_READ_LOCAL) ID-claimedBackAmount If-begin ","position":"354,356,"}
{"sequence":"ID-claimedBackAmount If-begin Iftest-begin ","position":"354,356,"}
{"sequence":"If-begin Iftest-begin ID-claimedBackAmount ","position":"356,"}
{"sequence":"Iftest-begin ID-claimedBackAmount Binary_expr->(MEMORY_READ_LOCAL,LITERAL) ","position":"356,"}
{"sequence":"ID-claimedBackAmount Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE ","position":"356,"}
{"sequence":"Binary_expr->(MEMORY_READ_LOCAL,LITERAL) Literal-TYPE Iftest-end ","position":"356,"}
{"sequence":"Literal-TYPE Iftest-end CALL_MIN_GAS ","position":"356,357,"}
{"sequence":"Iftest-end CALL_MIN_GAS ID-owner ","position":"356,357,"}
{"sequence":"CALL_MIN_GAS ID-owner ID-transfer ","position":"357,"}
{"sequence":"ID-owner ID-transfer ID-claimedBackAmount ","position":"357,"}
{"sequence":"ID-transfer ID-claimedBackAmount NORMAL ","position":"357,359,"}
{"sequence":"ID-claimedBackAmount NORMAL ID-UnclaimedDividendTransfer ","position":"357,359,"}
{"sequence":"NORMAL ID-UnclaimedDividendTransfer ID-dividendId ","position":"359,"}
{"sequence":"ID-UnclaimedDividendTransfer ID-dividendId ID-claimedBackAmount ","position":"359,"}
{"sequence":"ID-dividendId ID-claimedBackAmount Literal-TYPE ","position":"359,361,"}
{"sequence":"ID-claimedBackAmount Literal-TYPE If-end ","position":"359,361,356,"}
{"sequence":"Literal-TYPE If-end Literal-TYPE ","position":"361,356,364,"}
{"sequence":"If-end Literal-TYPE Function_end-refundUnclaimedEthers ","position":"356,364,339,"}
